name: "Build Docker File"

on: 
  push:
    branches:
      - main
    paths:
      - "dockerfile/**"
      - ".github/workflows/build_docker.yaml"

permissions:
  id-token: write
  contents: read

jobs:
  Building:
    name: Building Docker File
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Dockerfile to Build
        id: Dockerfile
        run: | 
          build=""
          abc=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | \
            grep dockerfile | cut -d "/" -f 2 | sort -u) 
          if [[ -n "$abc" ]]; then  
            build=$(echo "$abc" | jq -R . | jq -s .)  
            echo "Docker files to build: $build"
          else
            echo "Nothing to build"
            build="[]"
          fi  
          echo "jsondata=$build" >> $GITHUB_ENV
          
      - name: Building Docker
        run: |    
          echo "We need to work to build"
          echo "Docker files: ${{ env.jsondata }}"

            #      echo "json=$jsondata" >> "$GITHUB_OUTPUT"
            # - name: Build the docker
            #   run: |
            #      json=${{steps.dockerfile.outputs.json}}   
            #      echo " the output value >  $json"  
                #  echo "$abc"
                #  for i in "${abc}"
                #  do
                #    data+=("$i")
                #    echo "just"
                #  done  
                #  echo "printing array value >> ${data[@]}" 
                #  echo "testing"
                #  echo "${#data}" 
                #  echo "data=$abc" >> "$GITHUB_OUTPUT"

                #  if [[ -z files ]] 
                #  then
                #   echo "nothing to build"
                #  else 
                #   for i in "{$files}"
                #   do
                #    echo "$i"
                #    data+=($i)
                #   done
                #  fi 
                #  echo "Files that needs to be build ${data[@]}"
                      
            # - name: Installing Docker  
            #   run: |
            #       cat /etc/os-release
            #       sudo apt update
            #       sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
            #       curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            #       sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            #       sudo apt update
            #       sudo apt install -y docker-ce
            #       docker version
            # - name: Building image
            #   run: |
            #     data=${{steps.dockerfile.outputs.data}}
            #     echo "printing >> $data"

        
                
