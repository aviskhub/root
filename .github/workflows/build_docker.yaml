name: "Build Docker File"

on: 
  push:
    branches:
      - main
    paths:
      - "dockerfile/**"
      - ".github/workflows/build_docker.yaml"

permissions:
  id-token: write
  contents: read

jobs:
  Docker_to_build:
    name: Building Docker File
    runs-on: ubuntu-latest
    outputs:
      files_to_build: ${{steps.Dockerfile.outputs.files_to_build}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Dockerfile to Build
        id: Dockerfile
        run: | 
          data=()
          files_changed=$(git diff --name-status ${{ github.event.before }} ${{ github.event.after }} | \
            grep dockerfile | grep -E 'A|M' | cut -d "/" -f 3 | sort -u)   
          if [[ "$files_changed" != "" ]]
          then 
            echo "files changed"
            while read lines ;
            do
               data+=("$lines")
            done <<< "$files_changed"
            echo "array >> ${data[@]}"
            echo "files_to_build=${data[@]}" >> $GITHUB_OUTPUT 
          else
            echo "files not changed" 
          fi    
  Build_Docker:
    name: Building_docker
    runs-on: ubuntu-latest
    environment: docker-publish
    needs: Docker_to_build
    if: ${{ needs.Docker_to_build.outputs.files_to_build != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
         fetch-depth: 0
      - name: Installing Docker  
        run: |
            cat /etc/os-release
            sudo apt update
            sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            sudo apt update
            sudo apt install -y docker-ce
            docker version

      - name: Building image
        run: |
          pwd
          ls
          read -a filetobuild <<< "${{ needs.Docker_to_build.outputs.files_to_build }}"
          echo ">>> ${filetobuild[@]}"
          # cd dockerfile 
          ls
          for element in "${filetobuild[@]}";
          do
             docker image build -t abhishekimage/${element}:latest -f ${{ github.workspace }}/dockerfile/default/${element} .
          done 
          echo "Listing all image"
          docker image ls
      - name: publishing image 
        uses: docker/login-action@v3
        with:
          username: ${{secrets.GITHUB_USERNAME}}
          password: ${{secrets.GITHUB_TOKEN}}     
          


  
                
