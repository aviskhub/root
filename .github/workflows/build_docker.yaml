name: "Build Docker File"

on: 
  push:
    branches:
      - main
    paths:
      - "dockerfile/**"
      - ".github/workflows/build_docker.yaml"

permissions:
  id-token: write
  contents: read

jobs:
  Docker_to_build:
    name: Building Docker File
    runs-on: ubuntu-latest
    outputs:
      jsondata: ${{steps.Dockerfile.outputs.jsonfile}}
      build: ${{steps.Dockerfile.outputs.dockerbuild}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Dockerfile to Build
        id: Dockerfile
        run: | 
          data=()
          files_changed=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | \
            grep dockerfile | cut -d "/" -f 2 | sort -u) 
          echo "changed >> $files_changed"
          if [[ "$files_changed" != "" ]]
          then 
            echo "files changed"
            while read lines ;
            do
               echo "$lines"
            done < "$files_changed"   
          else
            echo "files not changed" 
          fi    




  # Build_Docker:
  #   name: Building_docker
  #   runs-on: ubuntu-latest
  #   needs: Docker_to_build
  #   if: ${{needs.Docker_to_build.outputs.build == 'true'}}
  #   steps:
  #     - name: Building Docker
  #       run: |    
  #         echo "We need to work to build"
  #         echo "${{needs.Docker_to_build.outputs.jsondata}}"

      # - name: Installing Docker  
      #   run: |
      #       cat /etc/os-release
      #       sudo apt update
      #       sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
      #       curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      #       sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      #       sudo apt update
      #       sudo apt install -y docker-ce
      #       docker version

      # - name: Building image
      #   run: |
      #     echo "testing docker command"

  
                
